# K3s Cluster Commands for Hetzner Cloud

# Network and Infrastructure Setup
create-hetzner-network:
    hcloud network create --name ${PRIVATE_NETWORK_NAME:-k3s-net} --ip-range 10.0.0.0/16
    # Add subnet specific to your location
    hcloud network add-subnet ${PRIVATE_NETWORK_NAME:-k3s-net} --network-zone ${HETZNER_NETWORK_ZONE:-us-east} --type server --ip-range 10.0.0.0/24

create-hetzner-firewall:
    hcloud firewall create --name ${FIREWALL_NAME:-k3s-fw}
    # Base Rules
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 22 --source-ips ${ADMIN_PUBLIC_IP}/32 --description "SSH from Admin"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol icmp --source-ips ${ADMIN_PUBLIC_IP}/32 --description "ICMP from Admin"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol icmp --source-ips 10.0.0.0/16 --description "ICMP from Private Net"
    # K3s Core Rules
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 6443 --source-ips 10.0.0.0/16,${ADMIN_PUBLIC_IP}/32 --description "K3s API"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 10250 --source-ips 10.0.0.0/16 --description "Kubelet"
    # K3s HA Etcd Rules (Add now for future readiness)
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 2379 --source-ips 10.0.0.0/16 --description "Etcd Client"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 2380 --source-ips 10.0.0.0/16 --description "Etcd Peer"
    # CNI Rules (Flannel Default - Adjust for Cilium later)
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol udp --port 51820 --source-ips 10.0.0.0/16 --description "Flannel WireGuard"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol udp --port 8472 --source-ips 10.0.0.0/16 --description "Flannel VXLAN (Fallback)"
    # Ingress Rules (Allow from ANY initially, restrict later if needed)
    # Or restrict to Tailscale IPs if using Tailscale Funnel primarily
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 80 --source-ips 0.0.0.0/0 --description "Traefik HTTP"
    hcloud firewall add-rule ${FIREWALL_NAME:-k3s-fw} --direction in --protocol tcp --port 443 --source-ips 0.0.0.0/0 --description "Traefik HTTPS"

create-hetzner-placement-group:
    hcloud placement-group create --name ${PLACEMENT_GROUP_NAME:-k3s-placement-group} --type spread

# Node Management
create-control-node: # Uses HETZNER_IMAGE_NAME, CONTROL_PLANE_VM_TYPE, etc from env
    hcloud server create \
      --name hetzner-control-01 \
      --image ${HETZNER_IMAGE_NAME} \
      --type ${CONTROL_PLANE_VM_TYPE} \
      --location ${HETZNER_LOCATION} \
      --network ${PRIVATE_NETWORK_NAME:-k3s-net} \
      --firewall ${FIREWALL_NAME:-k3s-fw} \
      --ssh-key ${HETZNER_SSH_KEY_NAME} \
      --placement-group ${PLACEMENT_GROUP_NAME:-k3s-placement-group} \
      --label k8s-cluster=${K3S_CLUSTER_NAME:-k3s-us-east} \
      --label k8s-nodepool=control-plane \
      --user-data '#cloud-config\nwrite_files:\n- path: /etc/nixos/k3s_role\n  content: control\n'

create-worker-node number="1" pool="static-workers" type="${WORKER_VM_TYPE:-cpx21}": # Allow pool label + type override
    hcloud server create \
      --name hetzner-worker-{{pool}}-{{number}} \
      --image ${HETZNER_IMAGE_NAME} \
      --type {{type}} \
      --location ${HETZNER_LOCATION} \
      --network ${PRIVATE_NETWORK_NAME:-k3s-net} \
      --firewall ${FIREWALL_NAME:-k3s-fw} \
      --ssh-key ${HETZNER_SSH_KEY_NAME} \
      --placement-group ${PLACEMENT_GROUP_NAME:-k3s-placement-group} \
      --label k8s-cluster=${K3S_CLUSTER_NAME:-k3s-us-east} \
      --label k8s-nodepool={{pool}} \
      --user-data '#cloud-config\nwrite_files:\n- path: /etc/nixos/k3s_role\n  content: worker\n'

# Image Building
build-k3s-image:
    nix build .#hetznerK3sNodeImage --impure

compress-k3s-image:
    zstd result/disk.raw -o hetzner-k3s-image.zst

register-k3s-image:
    hcloud image create --name ${HETZNER_IMAGE_NAME:-my-k3s-image-v1} --type snapshot --description "NixOS K3s Node Image" --from-url https://example.com/path/to/hetzner-k3s-image.zst

# Kubernetes Management
get-kubeconfig:
    ssh ${ADMIN_USERNAME:-nixos}@$(hcloud server ip hetzner-control-01) "sudo cat /etc/rancher/k3s/k3s.yaml" | sed "s/127.0.0.1/$(hcloud server ip hetzner-control-01)/g" > kubeconfig
    chmod 600 kubeconfig
    echo "Kubeconfig saved to ./kubeconfig"
    echo "Use: export KUBECONFIG=$(pwd)/kubeconfig"

bootstrap-flux:
    flux bootstrap github \
      --owner=${GITHUB_USER} \
      --repository=${FLUX_REPO} \
      --branch=main \
      --path=clusters/hetzner \
      --personal

# Deploy-rs targets
deploy-control-node:
    deploy .#hetzner-control-01

deploy-worker-node number="1" pool="static-workers":
    deploy .#hetzner-worker-{{pool}}-{{number}}

# Installer ISO
build-installer-iso:
    nix build .#installerIso --out-link k3s-installer.iso

# Secrets Management
sops-edit:
    sops ./k3s-cluster/secrets/secrets.yaml